available packages
a <- available.packages()
head(rownames(a),3)
head(rownames(a),10)
install.packages("KernSmooth")
library(KernSmooth)
search()
install.packages('swirl')
install_from_swirl("R Programming")
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x-3
y
library(datasets)
data(irsi)
data(irsis)
data(iris)
iris
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
subdata <- iris[iris$Species = "virginica", ]
subdata <- iris[iris$Species == "virginica", ]
subdata
mean(subdata$Sepal.Length)
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
rnorm(10)
runif(10)
rnorm(10,1)
c(1:5, 10.5, "next")
f <- gl(3, 10)
View(iris)
iris$Species
levels(iris$Species)
tapply(iris, levels(iris$Species), mean)
tapply(iris$Sepal.Length, iris$Species, mean)
data(mtcars)
mtcars
split(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
hp <- sapply(split(mtcars$hp, mtcars$cyl), mean)
hp$4
hp.4
hp$4
hp[4]
hp['4']
hp['4'] - hp['8']
debug(ls)
ls
tapply(iris$Sepal.Length, iris$Species, mean)
with(mtcars, tapply(mpg, cyl, mean))
sapply(split(mtcars$mpg, mtcars$cyl), mean)
hp <- sapply(split(mtcars$hp, mtcars$cyl), mean)
e
undebug(ls)
undebug(ls)
ยง
hp <- sapply(split(mtcars$hp, mtcars$cyl), mean)
hp['4'] - hp['8']\
hp['4'] - hp['8']
swirl
swirl()
library(swirl)
swirl()
x <- c(44, NA, 5, NA)
x*3
y<-rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <_ is.na(my_data)
my_na <- is.na(my_data)
my>na
my_na
my_data ==NA
sum(my_na)
my_data
0/0
Inf-Inf
1
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0])
x[0]
x[300]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2,
| norf = NA)
vect <- c(foo = 11, bar = 2, norf = NA).
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
my_vector
attribute(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
matrix(1:20, nrow=4, ncol=5)
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- vector("Bill", "Gina", "Kelly", "Sean")
patients <- vector(c("Bill", "Gina", "Kelly", "Sean")
)
patients <- vector(c("Bill", "Gina", "Kelly", "Sean"))
?vector
patients <- c( "Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight","bp", "rating", "test")
colnames(cnames, my_data)
colnames(cnames)
colnames(my_data) <- cnames
my_data
install_from_swirl("Getting and Cleaning Data")
train <- read.table("./UCI HAR Dataset/train/X_train.txt", header=FALSE)
labels <- read.table("./UCI HAR Dataset/features.txt", header=FALSE)
#read the subject data and label the column
subjectTrain <- read.table("./UCI HAR Dataset/train/subject_train.txt", header=FALSE)
colnames(subjectTrain) <- "Subject"
#read the activity data and label the column
actTrain <- read.table("./UCI HAR Dataset/train/y_train.txt", header=FALSE)
colnames(actTrain) <- "Activity"
#cbind the three data frames together: subject + activity + testData
intermediateStep <- cbind(actTrain, train)
trainData <- cbind(subjectTrain, intermediateStep)
#read test data
test <- read.table("./UCI HAR Dataset/test/X_test.txt", header=FALSE)
#colnames(test) <-
#read the subject data and label the column
subjectTest <- read.table("./UCI HAR Dataset/test/subject_test.txt", header=FALSE)
colnames(subjectTest) <- "Subject"
#read the activity data and label the column
actTest <- read.table("./UCI HAR Dataset/test/y_test.txt", header=FALSE)
colnames(actTest) <- "Activity"
#cbind the three data frames together: subject + activity  + testData
intermediateStep2 <- cbind(actTest, test)
testData <- cbind(subjectTest, intermediateStep2)
#rbind the trainData and testData, to create one big dataset
fullData <- rbind(trainData, testData)
setwd("~/Projects/Github/Coursera-GettingCleaningData")
train <- read.table("./UCI HAR Dataset/train/X_train.txt", header=FALSE)
labels <- read.table("./UCI HAR Dataset/features.txt", header=FALSE)
#read the subject data and label the column
subjectTrain <- read.table("./UCI HAR Dataset/train/subject_train.txt", header=FALSE)
colnames(subjectTrain) <- "Subject"
#read the activity data and label the column
actTrain <- read.table("./UCI HAR Dataset/train/y_train.txt", header=FALSE)
colnames(actTrain) <- "Activity"
#cbind the three data frames together: subject + activity + testData
intermediateStep <- cbind(actTrain, train)
trainData <- cbind(subjectTrain, intermediateStep)
#read test data
test <- read.table("./UCI HAR Dataset/test/X_test.txt", header=FALSE)
#colnames(test) <-
#read the subject data and label the column
subjectTest <- read.table("./UCI HAR Dataset/test/subject_test.txt", header=FALSE)
colnames(subjectTest) <- "Subject"
#read the activity data and label the column
actTest <- read.table("./UCI HAR Dataset/test/y_test.txt", header=FALSE)
colnames(actTest) <- "Activity"
#cbind the three data frames together: subject + activity  + testData
intermediateStep2 <- cbind(actTest, test)
testData <- cbind(subjectTest, intermediateStep2)
#rbind the trainData and testData, to create one big dataset
fullData <- rbind(trainData, testData)
head(fullData)
tail(fullData)
tail(fullData[,1:3])
actLabels <- read.table("./UCI HAR Dataset/activity_labels.txt", header=FALSE)
actLabels <- as.character(actLabels[["V2"]])
fullDataTest[ ,1] <- factor(fullData[ ,2], labels = actLabels)
fullData[ ,2] <- factor(fullData[ ,2], labels = actLabels)
head(fullData[,1:3])
tail(fullData[,1:3])
mynames <- c("bob", "mary", "tom")
description <- my names
description <- gsub("o", " the letter o ", description)
description <- gsub("m", " the letter m ", description)
codestart <- paste(mynames, description)
mynames <- c("bob", "mary", "tom")
description <- mynames
description <- gsub("o", " the letter o ", description)
description <- gsub("m", " the letter m ", description)
codestart <- paste(mynames, description)
mynames
description
codestart
labels
str(labels)
labels <- as.character(lablesTable[["V2"]])
labelsTable <- read.table("./UCI HAR Dataset/features.txt", header=FALSE)
labels <- as.character(lablesTable[["V2"]])
labels <- as.character(labelsTable[["V2"]])
labels
labels2 <- gsub("()", "", labels)
labels2
head(labels2)
labels2 <- gsub("()", "", labels, fixed=TRUE)
head(labels2)
labels <- gsub("()", "", labels, fixed=TRUE)
labels <- gsub("()", "", labels, fixed=TRUE)
colnames(train) <- labels
head(train)
train <- read.table("./UCI HAR Dataset/train/X_train.txt", header=FALSE)
labelsTable <- read.table("./UCI HAR Dataset/features.txt", header=FALSE)
labels <- as.character(labelsTable[["V2"]])
#Strip "()" from labels
labels <- gsub("()", "", labels, fixed=TRUE)
colnames(train) <- labels
#read the subject data and label the column
subjectTrain <- read.table("./UCI HAR Dataset/train/subject_train.txt", header=FALSE)
colnames(subjectTrain) <- "Subject"
#read the activity data and label the column
actTrain <- read.table("./UCI HAR Dataset/train/y_train.txt", header=FALSE)
colnames(actTrain) <- "Activity"
#cbind the three data frames together: subject + activity + testData
intermediateStep <- cbind(actTrain, train)
trainData <- cbind(subjectTrain, intermediateStep)
#read test data
test <- read.table("./UCI HAR Dataset/test/X_test.txt", header=FALSE)
#apply the same labels as column names
colnames(train) <- labels
#read the subject data and label the column
subjectTest <- read.table("./UCI HAR Dataset/test/subject_test.txt", header=FALSE)
colnames(subjectTest) <- "Subject"
#read the activity data and label the column
actTest <- read.table("./UCI HAR Dataset/test/y_test.txt", header=FALSE)
colnames(actTest) <- "Activity"
#cbind the three data frames together: subject + activity  + testData
intermediateStep2 <- cbind(actTest, test)
testData <- cbind(subjectTest, intermediateStep2)
#rbind the trainData and testData, to create one big dataset
fullData <- rbind(trainData, testData)
grepl("mean"+|"std", labels)
grepl("mean+|std", labels)
labels
selected <- grepl("mean+|std", labels)
labels[selected, ]
selected <- grepl("mean+|std", labels)
labels[,selected]
selected <- grepl("mean+|std", labels)
labels[selected]
selected <- grepl("mean\-+|std", labels)
selected <- grepl("mean-+|std", labels)
labels[selected]
selected <- grepl("mean-+|mean^+|std", labels)
labels[selected]
selected <- grepl("mean-|mean$|std", labels)
labels[selected]
labels[, selected]
train <- train[selected]
train <- read.table("./UCI HAR Dataset/train/X_train.txt", header=FALSE)
#Get labels for each column
labelsTable <- read.table("./UCI HAR Dataset/features.txt", header=FALSE)
labels <- as.character(labelsTable[["V2"]])
#Strip "()" from labels
labels <- gsub("()", "", labels, fixed=TRUE)
colnames(train) <- labels
#Select only the measurements about the mean and standard deviation for each measurement
meanAndStandard <- grepl("mean-|mean$|std", labels)
trainSubset <- train[meanAndStandard]
#read the subject data and label the column
subjectTrain <- read.table("./UCI HAR Dataset/train/subject_train.txt", header=FALSE)
colnames(subjectTrain) <- "Subject"
#read the activity data and label the column
actTrain <- read.table("./UCI HAR Dataset/train/y_train.txt", header=FALSE)
colnames(actTrain) <- "Activity"
#cbind the three data frames together: subject + activity + testData
intermediateStep <- cbind(actTrain, trainSubset)
trainData <- cbind(subjectTrain, intermediateStep)
#read test data
test <- read.table("./UCI HAR Dataset/test/X_test.txt", header=FALSE)
#apply the same labels as column names
colnames(train) <- labels
#Select only the measurements about the mean and standard deviation for each measurement
testSubset <- test[meanAndStandard]
#read the subject data and label the column
subjectTest <- read.table("./UCI HAR Dataset/test/subject_test.txt", header=FALSE)
colnames(subjectTest) <- "Subject"
#read the activity data and label the column
actTest <- read.table("./UCI HAR Dataset/test/y_test.txt", header=FALSE)
colnames(actTest) <- "Activity"
#cbind the three data frames together: subject + activity  + testData
intermediateStep2 <- cbind(actTest, testSubset)
testData <- cbind(subjectTest, intermediateStep2)
#rbind the trainData and testData, to create one big dataset
fullData <- rbind(trainData, testData)
head(trainData)
head(testData)
colnames(test) <- labels
#Select only the measurements about the mean and standard deviation for each measurement
testSubset <- test[meanAndStandard]
#read the subject data and label the column
subjectTest <- read.table("./UCI HAR Dataset/test/subject_test.txt", header=FALSE)
colnames(subjectTest) <- "Subject"
#read the activity data and label the column
actTest <- read.table("./UCI HAR Dataset/test/y_test.txt", header=FALSE)
colnames(actTest) <- "Activity"
#cbind the three data frames together: subject + activity  + testData
intermediateStep2 <- cbind(actTest, testSubset)
testData <- cbind(subjectTest, intermediateStep2)
#rbind the trainData and testData, to create one big dataset
fullData <- rbind(trainData, testData)
#head(fullData[,1:3])
#tail(fullData[,1:3])
fullData
actLabels <- read.table("./UCI HAR Dataset/activity_labels.txt", header=FALSE)
actLabels <- as.character(actLabels[["V2"]])
#Change the labels of the factor
fullData[ ,2] <- factor(fullData[ ,2], labels = actLabels)
head(fullData)
tapply(fullData$tBodayAcc-mean-X, fullData$Subject, mean)
library(plyr)
tidy_data <- ddply(fullData, c("Subject", "Activity"), numcolwise(mean))
install.packages("plyr")
library(plyr)
tidy_data <- ddply(fullData, c("Subject", "Activity"), numcolwise(mean))
tidy_data
str(tidyData)
tidyData <- ddply(fullData, c("Subject", "Activity"), numcolwise(mean))
str(tidyData)
